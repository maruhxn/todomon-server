plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation project(':todomon-infra')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Redis
    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    // test containers
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.1"
    testImplementation "org.testcontainers:testcontainers:1.20.1"
    testImplementation "org.testcontainers:junit-jupiter:1.20.1"


    // micrometer-prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jjwt
    implementation "io.jsonwebtoken:jjwt-api:0.12.3"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.12.3"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.12.3"

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // DB driver
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // AWS S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.691'
    testImplementation "io.findify:s3mock_2.13:0.2.6"

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('clean') {
    delete file('src/main/generated')
}

bootJar {
    archiveFileName = 'todomon-app.jar'
}